
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // USERS
    // Users can read their own data. Seller info is public.
    // Anyone can create an account. Users can only update/delete their own.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == userId;

      // CART (Subcollection of users)
      // Users can only access their own cart.
      match /cart/{cartId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    // PRODUCTS
    // Publicly readable. Only sellers can write.
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';

      // REVIEWS (Subcollection of products)
      // Publicly readable. Only buyers can create.
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'buyer';
      }
    }
    
    // INGREDIENTS
    // Publicly readable. Only sellers can write.
    match /ingredients/{ingredientId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
    }

    // ORDERS
    // Buyers can create and read their own orders.
    // Sellers can read all orders and update them.
    match /orders/{orderId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if request.auth.uid == resource.data.userId || 
                    (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
    }

    // MESSAGES
    // Separated rules for get, list, create, and update for clarity and security.
    match /messages/{messageId} {
      // Allow reading a single document if the user is the buyer or a seller.
      allow get: if request.auth.uid == resource.data.buyerId ||
                    (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');

      // Allow listing documents:
      // - Buyers can only list messages where they are the buyerId.
      // - Sellers can list all messages.
      allow list: if (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller') ||
                   (request.auth.uid == request.query.where.buyerId);
      
      // Allow creating a message if the user is authenticated and is either the buyer or a seller.
      allow create: if request.auth != null &&
                      (request.auth.uid == request.resource.data.buyerId ||
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
      
      // Allow updating a message (e.g., to mark as read) if the user is part of the conversation.
      allow update: if request.auth.uid == resource.data.buyerId ||
                       (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
    }
  }
}
