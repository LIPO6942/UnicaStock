
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isSeller() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
    }

    // Publicly readable collections
    match /products/{productId} {
      allow read: if true;
      allow write: if isSeller(); // Only sellers can create/update/delete products

      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if isSignedIn(); // Any signed-in user can create a review
        allow update, delete: if false; // Reviews are immutable
      }
    }

    match /ingredients/{ingredientId} {
        allow read: if true;
        allow write: if isSeller(); // Only sellers can manage ingredients
    }

    // User-specific collections
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if isSignedIn();
      
      // Cart subcollection
      match /cart/{cartId} {
        allow read, write, delete: if isOwner(userId);
      }
    }

    // Orders collection
    match /orders/{orderId} {
      allow create: if isSignedIn(); // Any signed in user can create an order
      allow read: if isOwner(get(/databases/$(database)/documents/orders/$(orderId)).data.userId) || isSeller();
      allow update: if isSeller(); // Only seller can update order status
      allow delete: if false; // Orders should not be deleted
    }

    // Messages collection
    match /messages/{messageId} {
        allow read, create: if isSignedIn() && (isOwner(resource.data.buyerId) || isSeller());
        allow update: if isSignedIn() && (isOwner(resource.data.buyerId) || isSeller());
    }
  }
}
