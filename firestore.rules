
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Publicly readable, seller-writable collections
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
      
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'buyer';
      }
    }
    
    match /ingredients/{ingredientId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
    }

    // User-specific data
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;

      match /cart/{cartId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Orders
    match /orders/{orderId} {
      allow read: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller' || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null;
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
    }

    // Messages
    match /messages/{messageId} {
      allow read, create: if request.auth != null && (resource.data.buyerId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
      allow update: if request.auth != null && (resource.data.buyerId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
    }
  }
}
