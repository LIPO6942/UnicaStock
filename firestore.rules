
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // PUBLIC: Products and their reviews can be read by anyone.
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
      
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'buyer';
      }
    }

    // PUBLIC: Ingredients can be read by anyone.
    match /ingredients/{ingredientId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
    }

    // PROTECTED: User data can only be read/written by the user themselves.
    // Sellers can also be read by anyone (for their public profile).
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId || get(/databases/$(database)/documents/users/$(userId)).data.type == 'seller';
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // PROTECTED: Cart can only be accessed by the user.
      match /cart/{cartId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // PROTECTED: Orders can only be read by the user who created them or by the seller.
    // Users can only create orders for themselves.
    // Sellers can update orders.
    match /orders/{orderId} {
       allow read: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
       allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
       allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
    }

    // PROTECTED: Messages can be read by the involved buyer or the seller.
    // Messages can be created by either the buyer or the seller.
    match /messages/{messageId} {
      allow read, create: if request.auth != null && (request.auth.uid == resource.data.buyerId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
      allow update: if request.auth != null; // Allows both parties to mark messages as read.
    }
  }
}
