rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow public read access for product and ingredient listings
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
      
      // Allow authenticated buyers to create reviews
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'buyer';
        allow update, delete: if false;
      }
    }

    match /ingredients/{ingredientId} {
      allow read: if true;
      allow write: if false; // This collection is read-only from the client
    }
    
    // Secure user data
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      
      // Secure user's cart
      match /cart/{cartId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Secure orders
    match /orders/{orderId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && 
                            (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
    }
    
    // Secure messages
    match /messages/{messageId} {
        allow create: if request.auth != null;
        allow read, update: if request.auth != null &&
                               (request.auth.uid == resource.data.buyerId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
    }
  }
}
