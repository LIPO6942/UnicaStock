rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users:
    // - Authenticated users can read their own data.
    // - Publicly readable for displaying seller info.
    // - Account creation is allowed for anyone.
    // - Users can only update their own profiles.
    match /users/{userId} {
      allow read; // Make public to allow showing seller info
      allow create;
      allow update, delete: if request.auth.uid == userId;

      // Cart:
      // Users can only access their own cart.
      match /cart/{cartId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    // Products:
    // - Publicly readable by anyone.
    // - Only sellers can create, update, or delete products.
    match /products/{productId} {
      allow read;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';

      // Reviews:
      // - Publicly readable.
      // - Only authenticated buyers can create reviews.
      match /reviews/{reviewId} {
        allow read;
        allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'buyer';
      }
    }
    
    // Ingredients:
    // - Publicly readable.
    // - Only sellers can write.
    match /ingredients/{ingredientId} {
        allow read: if true;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
    }

    // Orders:
    // - Users can only create orders for themselves.
    // - Users can read their own orders.
    // - Sellers can read all orders and update their status.
    match /orders/{orderId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if request.auth.uid == resource.data.userId || (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller';
    }

    // Messages:
    // - Users can only access messages related to their orders.
    // - Sellers can access all messages.
    match /messages/{messageId} {
       allow read, create: if request.auth != null && (request.auth.uid == resource.data.buyerId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
       allow update: if request.auth != null && (request.auth.uid == resource.data.buyerId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'seller');
    }
  }
}
